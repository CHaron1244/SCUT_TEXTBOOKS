#include <bits/stdc++.h>
using namespace std;
const int dx[9] = {-1,-1,-1,0,0,0,1,1,1};
const int dy[9] = {-1,0,1,-1,0,1,-1,0,1};
int mp[6][9];
int boom[6][9];
int vis[6][9];
bool flag = false;
int ans = 900;
void check() {
	int temp_sum = 0;
	for (int i = 1; i < 5; ++i) {
		for (int j = 1; j < 8; ++j) {
			if (boom[i][j]) {
				temp_sum += (i == 2 || i == 3 ? 175 : 150);
				for (int k = 0; k < 9; ++k) {
					if (i + dx[k] >= 0 && i + dx[k] < 6
					&& j + dy[k] >= 0 && j + dy[k] < 9) {
						vis[i + dx[k]][j + dy[k]] = 1;
					}
				}
			}
		}
	}
	bool flag = true;
	for (int i = 0; i < 6; ++i) {
		for (int j = 0; j < 9; ++j) {
			if (!vis[i][j] && mp[i][j]) {
				flag = false;
				break;
			}
		}
		if (!flag) break;
	}
	if (flag) ans = min(ans, temp_sum);
	memset(vis, 0, sizeof(vis));
}
void backtrack(int x, int y, int t) {
	if (t == 0) {
		check();
		return;
	}
	for (int i = x; i < 5; ++i) {
		for (int j = y; j < 8; ++j) {
			boom[i][j] = 1;
			backtrack(i, j + 1, t - 1);
			boom[i][j] = 0;
		}
		y = 0;
	}
}
int main() {
	for (int i = 0; i < 6; ++i) {
		for (int j = 0; j < 9; ++j) {
			scanf("%d", &mp[i][j]);
			if (mp[i][j]) flag = true;
		}
	}
	if (!flag) {
		printf("0");
		return 0;
	}
	for (int i = 1; i <= 5; ++i)  {
		backtrack(0, 0, i);
		if (ans < (i + 1) * 150) break;
	}
	printf("%d", ans);
	return 0;
}